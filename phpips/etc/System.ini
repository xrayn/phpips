[BaseConfig]
;
; These are general ConfigOptions which have to be setup correctly
;
;
DebbuggingMode="On"
SimulationMode="Off"
DefinedTags="sqli,xss,rce,dos,csrf,id,lfi,rfe,dt"


;
; ActionConfig[Type]= "ini|mysql" 
; If Ini, Options wougl be a path name
; If MySql additional options must be set
; e.g. 
; ActionConfig[DbHost]
; ActionConfig[DbName]
; ActionConfig[DbUser]
; ActionConfig[DbPass]
; ActionConfig[DbName]
; ... and so on .. 

ActionConfig[Type]="ini"
ActionConfig[Path]="phpips/lib/Config/ActionConfig.ini"
BasePath="/var/www/eclipse-workspaces/eclipse_helios/php-ips/"
UseCustomCommands="On"
CustomCommandModuleName="Test"

; dont start a session, use this static method instead to generate the session!
; only set this to on if you really need it.
; e.g. Zend Framework need this, else it throws an Zend_Session_Exception
; if your application uses Sessions already and checks if a session is initiated
; by itself, you need this feature

ExternalSessionManagementMode="Off"

; set the following two parameters to your SessionManager class if you set
; ExternalSessionManagementMode="On"
; the method has to be a static class method of the given class
; mostly these classes are singletons and so they have a getInstance() Method.
; use the method which creates the class and remove any parantheses.
; parameter to that are not supported yet.

;ExternalSessionManagement[Class]="Zend_Auth"
;ExternalSessionManagement[Method]="getInstance"


[CommandConfig]
;
;
; Here you can define Custom Configurations for Commands
; all these land in the registry of the system an can be accessed
; through getter/setter functions in the registry
; mail[Email] = "foo@test.com"
; In your Commands use
; registry->getCommandConfigFrom($commandName="mail",$key="Email")
; @see Registry Documentation
;

mail[Email]="foo@test.com"
mail[AdminEmail]="admin@test.com"

warn[Email]="foo@test.com"





